// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductManagementAPI.Data;

#nullable disable

namespace ProductManagementAPI.Migrations
{
    [DbContext(typeof(ProductManagementContext))]
    partial class ProductManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProductManagementAPI.Models.Product", b =>
                {
                    b.Property<Guid>("Pid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Pid");

                    b.HasIndex("UserId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("ProductManagementAPI.Models.User", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastConnection")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Uid");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("ProductManagementAPI.Models.Product", b =>
                {
                    b.HasOne("ProductManagementAPI.Models.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ProductManagementAPI.Models.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("ProductPid")
                                .HasColumnType("uuid");

                            b1.Property<string>("Amount")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ProductPid");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductPid");
                        });

                    b.OwnsOne("ProductManagementAPI.Models.Size", "Size", b1 =>
                        {
                            b1.Property<Guid>("ProductPid")
                                .HasColumnType("uuid");

                            b1.Property<int>("Height")
                                .HasColumnType("integer");

                            b1.Property<string>("Measurement")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("Weight")
                                .HasColumnType("integer");

                            b1.Property<int>("Width")
                                .HasColumnType("integer");

                            b1.HasKey("ProductPid");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("ProductPid");
                        });

                    b.Navigation("Price")
                        .IsRequired();

                    b.Navigation("Size")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProductManagementAPI.Models.User", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
